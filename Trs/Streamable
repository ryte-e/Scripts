

local Parent = script.Parent.Parent
local UserInputService_upvr = game:GetService("UserInputService")
local module_upvr_2 = require(Parent:WaitForChild("ToolManagment"))
local module_upvr = require(Parent:WaitForChild("Module_Management"):WaitForChild("Tweening"))
local var5_upvw = false
local var6_upvw = false
local Parent_2 = script.Parent
local LocalPlayer_upvr = game:GetService("Players").LocalPlayer
Parent_2.Equipped:Connect(function() -- Line 14
    --[[ Upvalues[1]:
        [1]: var6_upvw (read and write)
    ]]
    var6_upvw = true
end)
Parent_2.Unequipped:Connect(function() -- Line 18
    --[[ Upvalues[1]:
        [1]: var6_upvw (read and write)
    ]]
    var6_upvw = false
end)
local tbl_5_upvr = {
    T = false;
    R = false;
    Q = false;
    E = false;
    N = false;
    G = false;
    H = false;
    X = false;
    Z = false;
    Y = false;
}
local var12_upvw = false
local Out_upvr = Enum.EasingDirection.Out
local Back_upvr = Enum.EasingStyle.Back
local var15_upvr = CFrame.new(1.75, 0.25, -0.5) * CFrame.fromEulerAnglesXYZ((-math.pi), -4, 4)
local var16_upvr = CFrame.new(1.75, 0.25, 0.5) * CFrame.fromEulerAnglesXYZ((-math.pi), 4, 4)
local var17_upvr = CFrame.new(-1.75, 0.25, 0.5) * CFrame.fromEulerAnglesXYZ((-math.pi), -4, -4)
local var18_upvr = CFrame.new(-1.75, 0.25, -0.5) * CFrame.fromEulerAnglesXYZ((-math.pi), 4, -4)
local var19_upvw
local Character = LocalPlayer_upvr.Character
if not Character then
    Character = LocalPlayer_upvr.CharacterAdded:Wait()
end
local module_upvr_3 = require(Parent:WaitForChild("ToolManagment"):WaitForChild("HitboxHandler"))
local HumanoidRootPart_upvr = Character:WaitForChild("HumanoidRootPart")
local function Force_upvr(arg1) -- Line 92, Named "Force"
    --[[ Upvalues[4]:
        [1]: var5_upvw (read and write)
        [2]: module_upvr_2 (readonly)
        [3]: tbl_5_upvr (readonly)
        [4]: HumanoidRootPart_upvr (readonly)
    ]]
    -- KONSTANTERROR: [0] 1. Error Block 129 start (CF ANALYSIS FAILED)
    var5_upvw = false
    local var23 = Vector3.new(math.huge, math.huge, math.huge)
    local var24
    if module_upvr_2.check() == 'R' then
        if tbl_5_upvr.E == false and tbl_5_upvr.Q == false and tbl_5_upvr.N == false and tbl_5_upvr.T == false and tbl_5_upvr.R == false and tbl_5_upvr.G == false and tbl_5_upvr.H == false and tbl_5_upvr.X == false and tbl_5_upvr.Z == false and tbl_5_upvr.Y == false then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * 0
        elseif tbl_5_upvr.R == true then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * 15 + HumanoidRootPart_upvr.CFrame.RightVector * -17.5 + Vector3.new(0, 3, 0)
        elseif tbl_5_upvr.T == true then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * 15 + HumanoidRootPart_upvr.CFrame.RightVector * 17.5 + Vector3.new(0, 3, 0)
        elseif tbl_5_upvr.E == true then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * -22
        elseif tbl_5_upvr.Q == true then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * 20.5 + Vector3.new(0, 12, 0)
        elseif tbl_5_upvr.N == true then
            task.wait(0.1)
            var24 = (HumanoidRootPart_upvr.CFrame * CFrame.fromEulerAnglesXYZ(1, 0, 0)).LookVector * 57
            var24 = var24 * Vector3.new(1, 0, 1) + Vector3.new(0, 22.5, 0)
            var23 = Vector3.new(1000, 100000, 1000)
        elseif tbl_5_upvr.G == true then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * -25
            var24 += Vector3.new(0, 25.5, 0)
            var23 = Vector3.new(2000, 100000, 2000)
        elseif tbl_5_upvr.H == true then
            task.wait(0.1)
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * 28.5
            var24 += Vector3.new(0, 26.5, 0)
            var23 = Vector3.new(2000, 100000, 2000)
        elseif tbl_5_upvr.X == true then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * -1 + HumanoidRootPart_upvr.CFrame.RightVector * -27 * Vector3.new(1, 0, 1)
        elseif tbl_5_upvr.Z == true then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * -1 + HumanoidRootPart_upvr.CFrame.RightVector * 27 * Vector3.new(1, 0, 1)
        elseif tbl_5_upvr.Y == true then
            var24 = HumanoidRootPart_upvr.CFrame.LookVector * (HumanoidRootPart_upvr.AssemblyLinearVelocity * Vector3.new(1, 0, 1)).Magnitude * Vector3.new(1, 0, 1) + Vector3.new(0, 30, 0)
            var23 = Vector3.new(10, 5000000, 10)
            -- KONSTANTWARNING: GOTO [515] #364
        end
    elseif tbl_5_upvr.E == false and tbl_5_upvr.Q == false and tbl_5_upvr.N == false and tbl_5_upvr.T == false and tbl_5_upvr.R == false and tbl_5_upvr.G == false and tbl_5_upvr.H == false and tbl_5_upvr.X == false and tbl_5_upvr.Z == false and tbl_5_upvr.Y == false then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * 0
    elseif tbl_5_upvr.R == true then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * 15 + HumanoidRootPart_upvr.CFrame.RightVector * -17.5 + Vector3.new(0, 3, 0)
    elseif tbl_5_upvr.T == true then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * 15 + HumanoidRootPart_upvr.CFrame.RightVector * 17.5 + Vector3.new(0, 3, 0)
    elseif tbl_5_upvr.E == true then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * -22
    elseif tbl_5_upvr.Q == true then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * 20.5 + Vector3.new(0, 12, 0)
    elseif tbl_5_upvr.N == true then
        task.wait(0.1)
        var24 = (HumanoidRootPart_upvr.CFrame * CFrame.fromEulerAnglesXYZ(1, 0, 0)).LookVector * 57
        var24 = var24 * Vector3.new(1, 0, 1) + Vector3.new(0, 22.5, 0)
        var23 = Vector3.new(1000, 100000, 1000)
    elseif tbl_5_upvr.G == true then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * -25
        var24 += Vector3.new(0, 25.5, 0)
        var23 = Vector3.new(2000, 100000, 2000)
    elseif tbl_5_upvr.H == true then
        task.wait(0.1)
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * 28.5
        var24 += Vector3.new(0, 26.5, 0)
        var23 = Vector3.new(2000, 100000, 2000)
    elseif tbl_5_upvr.X == true then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * -1 + HumanoidRootPart_upvr.CFrame.RightVector * -27 * Vector3.new(1, 0, 1)
    elseif tbl_5_upvr.Z == true then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * -1 + HumanoidRootPart_upvr.CFrame.RightVector * 27 * Vector3.new(1, 0, 1)
    elseif tbl_5_upvr.Y == true then
        var24 = HumanoidRootPart_upvr.CFrame.LookVector * (HumanoidRootPart_upvr.AssemblyLinearVelocity * Vector3.new(1, 0, 1)).Magnitude * Vector3.new(1, 0, 1) + Vector3.new(0, 30, 0)
        var23 = Vector3.new(10, 5000000, 10)
    end
    -- KONSTANTERROR: [0] 1. Error Block 129 end (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [515] 364. Error Block 85 start (CF ANALYSIS FAILED)
    module_upvr_2.ApplyForce(arg1, var23, var24, "HRP")
    -- KONSTANTERROR: [515] 364. Error Block 85 end (CF ANALYSIS FAILED)
end
local var25_upvw = false
local var26_upvw = false
local var28_upvr = CFrame.new(0.5, -1.5, 1) * CFrame.fromEulerAnglesXYZ(-0.785, -0.5, 0)
local var29_upvr = CFrame.new(-0.5, -1.5, 1) * CFrame.fromEulerAnglesXYZ(-0.785, 0.5, 0)
local var30_upvr = CFrame.new(0.5, -1.5, -1) * CFrame.fromEulerAnglesXYZ(0.5235987755982988, 0.3, 0)
local var31_upvr = CFrame.new(0.7, -1.8, 0.5) * CFrame.fromEulerAnglesXYZ(-1.0471975511965976, -1.5, -0.7)
local var32_upvr = CFrame.new(0.5, -1.7, -1.1) * CFrame.fromEulerAnglesXYZ(0.7853981633974483, -1, 0)
local var33_upvr = CFrame.new(0.5, -1.7, -1) * CFrame.fromEulerAnglesXYZ(0.78, 1, 0)
local var34_upvr = CFrame.new(0.5, -1.5, -0.77) * CFrame.fromEulerAnglesXYZ(0.64, 0, 0)
local var35_upvr = CFrame.new(1.2, -1.7, 0) * CFrame.fromEulerAnglesXYZ(0.39269908169872414, 0.1, 0.7)
local var36_upvr = CFrame.new(0.5, -1.5, -0.7) * CFrame.fromEulerAnglesXYZ(0.5235987755982988, 0, 0)
local var37_upvr = CFrame.new(0.5, -1.5, 0.7) * CFrame.fromEulerAnglesXYZ(-0.5235987755982988, 0, 0)
local var38_upvr = CFrame.new(0.5, -1.5, -0.7) * CFrame.fromEulerAnglesXYZ(0.65, 0, 0)
local var39_upvr = CFrame.new(-0.5, -1.5, -1) * CFrame.fromEulerAnglesXYZ(0.5235987755982988, -0.3, 0)
local var40_upvr = CFrame.new(-0.7, -1.8, 0.5) * CFrame.fromEulerAnglesXYZ(-1.0471975511965976, 1.5, 0.7)
local var41_upvr = CFrame.new(-0.5, -1.7, -1) * CFrame.fromEulerAnglesXYZ(0.78, -1, 0)
local var42_upvr = CFrame.new(-0.5, -1.7, -1.1) * CFrame.fromEulerAnglesXYZ(0.7853981633974483, 1, 0)
local var43_upvr = CFrame.new(-0.5, -1.5, -0.7) * CFrame.fromEulerAnglesXYZ(0.64, 0, 0)
local var44_upvr = CFrame.new(-1.2, -1.7, 0) * CFrame.fromEulerAnglesXYZ(0.39269908169872414, -0.1, -0.7)
local var45_upvr = CFrame.new(-0.5, -1.5, -0.7) * CFrame.fromEulerAnglesXYZ(0.5235987755982988, 0, 0)
local var46_upvr = CFrame.new(-0.5, -1.5, 0.7) * CFrame.fromEulerAnglesXYZ(-0.5235987755982988, 0, 0)
local var47_upvr = CFrame.new(-0.5, -1.5, -0.7) * CFrame.fromEulerAnglesXYZ(0.65, 0, 0)
UserInputService_upvr.InputBegan:Connect(function(arg1, arg2) -- Line 199
    --[[ Upvalues[39]:
        [1]: UserInputService_upvr (readonly)
        [2]: tbl_5_upvr (readonly)
        [3]: var12_upvw (read and write)
        [4]: var6_upvw (read and write)
        [5]: module_upvr_2 (readonly)
        [6]: var25_upvw (read and write)
        [7]: module_upvr (readonly)
        [8]: var28_upvr (readonly)
        [9]: var15_upvr (readonly)
        [10]: var17_upvr (readonly)
        [11]: var29_upvr (readonly)
        [12]: var16_upvr (readonly)
        [13]: var18_upvr (readonly)
        [14]: module_upvr_3 (readonly)
        [15]: LocalPlayer_upvr (readonly)
        [16]: Force_upvr (readonly)
        [17]: Out_upvr (readonly)
        [18]: Back_upvr (readonly)
        [19]: var26_upvw (read and write)
        [20]: var5_upvw (read and write)
        [21]: var30_upvr (readonly)
        [22]: var19_upvw (read and write)
        [23]: var31_upvr (readonly)
        [24]: var32_upvr (readonly)
        [25]: var33_upvr (readonly)
        [26]: var34_upvr (readonly)
        [27]: var35_upvr (readonly)
        [28]: var36_upvr (readonly)
        [29]: var37_upvr (readonly)
        [30]: var38_upvr (readonly)
        [31]: var39_upvr (readonly)
        [32]: var40_upvr (readonly)
        [33]: var41_upvr (readonly)
        [34]: var42_upvr (readonly)
        [35]: var43_upvr (readonly)
        [36]: var44_upvr (readonly)
        [37]: var45_upvr (readonly)
        [38]: var46_upvr (readonly)
        [39]: var47_upvr (readonly)
    ]]
    for i, v in pairs(tbl_5_upvr) do
        if i == string.upper(UserInputService_upvr:GetStringForKeyCode(arg1.KeyCode)) and var12_upvw then
            tbl_5_upvr[i] = true
            var12_upvw = false
        end
    end
    if arg2 then
    else
        if var6_upvw == true and not module_upvr_2.GetUsing() and arg1.KeyCode == Enum.KeyCode.C and not var25_upvw then
            var25_upvw = true
            module_upvr_2.SetUsing(true)
            var12_upvw = true
            if module_upvr_2.check() == 'R' then
                i = 0.5
                v = -2
                i = var28_upvr
                v = Enum.EasingDirection.InOut
                module_upvr.TweenWeld("Right Leg", CFrame.new(i, v, 0), i, v, Enum.EasingStyle.Sine, 0.25)
                i = 1.5
                v = 0
                i = var15_upvr
                v = Enum.EasingDirection.InOut
                module_upvr.TweenWeld("Right Arm", CFrame.new(i, v, 0), i, v, Enum.EasingStyle.Sine, 0.25)
                i = -1.5
                v = 0
                i = var17_upvr
                v = Enum.EasingDirection.InOut
                module_upvr.TweenWeld("Left Arm", CFrame.new(i, v, 0), i, v, Enum.EasingStyle.Sine, 0.25)
            else
                i = -0.5
                v = -2
                i = var29_upvr
                v = Enum.EasingDirection.InOut
                module_upvr.TweenWeld("Left Leg", CFrame.new(i, v, 0), i, v, Enum.EasingStyle.Sine, 0.25)
                i = 1.5
                v = 0
                i = var16_upvr
                v = Enum.EasingDirection.InOut
                module_upvr.TweenWeld("Right Arm", CFrame.new(i, v, 0), i, v, Enum.EasingStyle.Sine, 0.25)
                i = -1.5
                v = 0
                i = var18_upvr
                v = Enum.EasingDirection.InOut
                module_upvr.TweenWeld("Left Arm", CFrame.new(i, v, 0), i, v, Enum.EasingStyle.Sine, 0.25)
            end
        end
        if var25_upvw == true then
            -- KONSTANTERROR: Expression was reused, decompilation is incorrect
            if tbl_5_upvr[string.upper(UserInputService_upvr:GetStringForKeyCode(arg1.KeyCode))] ~= nil then
                if module_upvr_2.check() == 'R' then
                    module_upvr_3:Activate({LocalPlayer_upvr.Character["Right Leg"]}, Force_upvr)
                    module_upvr.TweenWeld("Right Arm", CFrame.new(1.5, 0, 0), var16_upvr, Out_upvr, Back_upvr, 0.15)
                    module_upvr.TweenWeld("Left Arm", CFrame.new(-1.5, 0, 0), var18_upvr, Out_upvr, Back_upvr, 0.15)
                    var26_upvw = false
                    for i_2, _ in pairs(tbl_5_upvr) do
                        if tbl_5_upvr[i_2] == true then
                            var25_upvw = false
                            var12_upvw = false
                            var5_upvw = true
                            var26_upvw = true
                            if tbl_5_upvr.E == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var30_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var30_upvr
                            elseif tbl_5_upvr.X == true or tbl_5_upvr.Z == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var31_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var31_upvr
                            elseif tbl_5_upvr.T == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var32_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var32_upvr
                            elseif tbl_5_upvr.R == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var33_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var33_upvr
                            elseif tbl_5_upvr.Q == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var34_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var34_upvr
                            elseif tbl_5_upvr.N == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var35_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var35_upvr
                            elseif tbl_5_upvr.G == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var36_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var36_upvr
                            elseif tbl_5_upvr.H == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var37_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var37_upvr
                            elseif tbl_5_upvr.Y == true then
                                module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var38_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var38_upvr
                            end
                        end
                    end
                elseif module_upvr_2.check() == 'L' then
                    module_upvr_3:Activate({LocalPlayer_upvr.Character["Left Leg"]}, Force_upvr)
                    module_upvr.TweenWeld("Right Arm", CFrame.new(1.5, 0, 0), var15_upvr, Out_upvr, Back_upvr, 0.15)
                    module_upvr.TweenWeld("Left Arm", CFrame.new(-1.5, 0, 0), var17_upvr, Out_upvr, Back_upvr, 0.15)
                    var26_upvw = false
                    for i_4, _ in pairs(tbl_5_upvr) do
                        if tbl_5_upvr[i_4] == true then
                            var25_upvw = false
                            var12_upvw = false
                            var5_upvw = true
                            var26_upvw = true
                            if tbl_5_upvr.E == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var39_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var39_upvr
                            elseif tbl_5_upvr.X == true or tbl_5_upvr.Z == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var40_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var40_upvr
                            elseif tbl_5_upvr.T == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var41_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var41_upvr
                            elseif tbl_5_upvr.R == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var42_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var42_upvr
                            elseif tbl_5_upvr.Q == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var43_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var43_upvr
                            elseif tbl_5_upvr.N == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var44_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var44_upvr
                            elseif tbl_5_upvr.G == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var45_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var45_upvr
                            elseif tbl_5_upvr.H == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var46_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var46_upvr
                            elseif tbl_5_upvr.Y == true then
                                module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var47_upvr, Out_upvr, Back_upvr, 0.15)
                                var19_upvw = var47_upvr
                            end
                        end
                    end
                end
                wait(0.25)
                if var26_upvw then
                    if module_upvr_2.check() == 'R' then
                        module_upvr.TweenWeld("Right Leg", var19_upvw, CFrame.new(0.5, -2, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                        module_upvr.TweenWeld("Right Arm", var16_upvr, CFrame.new(1.5, 0, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                        module_upvr.TweenWeld("Left Arm", var18_upvr, CFrame.new(-1.5, 0, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                    else
                        module_upvr.TweenWeld("Left Leg", var19_upvw, CFrame.new(-0.5, -2, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                        module_upvr.TweenWeld("Right Arm", var15_upvr, CFrame.new(1.5, 0, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                        module_upvr.TweenWeld("Left Arm", var17_upvr, CFrame.new(-1.5, 0, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                    end
                    task.wait(0.15)
                    module_upvr_2.ResetWelds()
                    var5_upvw = false
                    for i_3, _ in pairs(tbl_5_upvr) do
                        tbl_5_upvr[i_3] = false
                    end
                    module_upvr_2.SetUsing(false)
                    module_upvr_3:Disable()
                end
            end
        end
    end
end)
local var93_upvr = CFrame.new(0.5, -1.8, -0.5) * CFrame.fromEulerAnglesXYZ(0.4, 0, 0)
local var94_upvr = CFrame.new(-0.5, -1.8, -0.5) * CFrame.fromEulerAnglesXYZ(0.4, 0, 0)
UserInputService_upvr.InputEnded:Connect(function(arg1, arg2) -- Line 380
    --[[ Upvalues[20]:
        [1]: var6_upvw (read and write)
        [2]: var25_upvw (read and write)
        [3]: var12_upvw (read and write)
        [4]: var5_upvw (read and write)
        [5]: module_upvr_2 (readonly)
        [6]: module_upvr_3 (readonly)
        [7]: LocalPlayer_upvr (readonly)
        [8]: Force_upvr (readonly)
        [9]: module_upvr (readonly)
        [10]: var16_upvr (readonly)
        [11]: Out_upvr (readonly)
        [12]: Back_upvr (readonly)
        [13]: var18_upvr (readonly)
        [14]: var26_upvw (read and write)
        [15]: tbl_5_upvr (readonly)
        [16]: var93_upvr (readonly)
        [17]: var19_upvw (read and write)
        [18]: var15_upvr (readonly)
        [19]: var17_upvr (readonly)
        [20]: var94_upvr (readonly)
    ]]
    if arg2 then
    elseif var6_upvw == true and var25_upvw and arg1.KeyCode == Enum.KeyCode.C then
        wait(0.1)
        if var25_upvw then
            var25_upvw = false
            var12_upvw = false
            var5_upvw = true
            if module_upvr_2.check() == 'R' then
                module_upvr_3:Activate({LocalPlayer_upvr.Character["Right Leg"]}, Force_upvr)
                module_upvr.TweenWeld("Right Arm", CFrame.new(1.5, 0, 0), var16_upvr, Out_upvr, Back_upvr, 0.15)
                module_upvr.TweenWeld("Left Arm", CFrame.new(-1.5, 0, 0), var18_upvr, Out_upvr, Back_upvr, 0.15)
                var26_upvw = false
                if tbl_5_upvr.E == false and tbl_5_upvr.Q == false and tbl_5_upvr.N == false and tbl_5_upvr.T == false and tbl_5_upvr.R == false and tbl_5_upvr.G == false and tbl_5_upvr.H == false and tbl_5_upvr.X == false and tbl_5_upvr.Z == false and tbl_5_upvr.Y == false then
                    module_upvr.TweenWeld("Right Leg", CFrame.new(0.5, -2, 0), var93_upvr, Out_upvr, Back_upvr, 0.15)
                    var19_upvw = var93_upvr
                    -- KONSTANTWARNING: GOTO [264] #194
                end
            elseif module_upvr_2.check() == 'L' then
                module_upvr_3:Activate({LocalPlayer_upvr.Character["Left Leg"]}, Force_upvr)
                module_upvr.TweenWeld("Right Arm", CFrame.new(1.5, 0, 0), var15_upvr, Out_upvr, Back_upvr, 0.15)
                module_upvr.TweenWeld("Left Arm", CFrame.new(-1.5, 0, 0), var17_upvr, Out_upvr, Back_upvr, 0.15)
                var26_upvw = false
                if tbl_5_upvr.E == false and tbl_5_upvr.Q == false and tbl_5_upvr.N == false and tbl_5_upvr.T == false and tbl_5_upvr.R == false and tbl_5_upvr.G == false and tbl_5_upvr.H == false and tbl_5_upvr.X == false and tbl_5_upvr.Z == false and tbl_5_upvr.Y == false then
                    module_upvr.TweenWeld("Left Leg", CFrame.new(-0.5, -2, 0), var94_upvr, Out_upvr, Back_upvr, 0.15)
                    var19_upvw = var94_upvr
                end
            end
            wait(0.25)
            if not var26_upvw then
                if module_upvr_2.check() == 'R' then
                    module_upvr.TweenWeld("Right Leg", var19_upvw, CFrame.new(0.5, -2, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                    module_upvr.TweenWeld("Right Arm", var16_upvr, CFrame.new(1.5, 0, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                    module_upvr.TweenWeld("Left Arm", var18_upvr, CFrame.new(-1.5, 0, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                else
                    module_upvr.TweenWeld("Left Leg", var19_upvw, CFrame.new(-0.5, -2, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                    module_upvr.TweenWeld("Right Arm", var15_upvr, CFrame.new(1.5, 0, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                    module_upvr.TweenWeld("Left Arm", var17_upvr, CFrame.new(-1.5, 0, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, 0.25)
                end
                task.wait(0.15)
                module_upvr_2.ResetWelds()
                var5_upvw = false
                for i_5, _ in pairs(tbl_5_upvr) do
                    tbl_5_upvr[i_5] = false
                end
                module_upvr_2.SetUsing(false)
                module_upvr_3:Disable()
            end
        end
    end
end)
